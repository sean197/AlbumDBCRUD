@model AlbumApp.NET.Models.Album

@{
    ViewBag.Title = "AddOrEdit";
    Layout = null;
}

 
@using (Html.BeginForm("AddorEdit", "Album", FormMethod.Post, new { enctype = "multipart/form-data", onSubmit = "return jQueryAjaxPost(this);", data_restUrl = Url.Action("AddorEdit", "Employee", new { id = 0}) }))// data-resetUrl
{
    @Html.AntiForgeryToken()
<div class="row">

    <div class="form-horizontal">

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.AlbumID)
        @Html.HiddenFor(model => model.ImagePath)


        <div class="col-md-6">

            <div class="form-group">
                @Html.LabelFor(model => model.ArtistName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ArtistName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ArtistName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Album1, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Album1, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Album1, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.Description, 8, 50, new { htmlAttributes = new { @class = "form-control" } })
                    <br />
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.RecordLabel, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.RecordLabel, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.RecordLabel, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Submit" class="btn btn-default" />
                    @if(Model.AlbumID != 0)
                    {
                        <a class="btn btn-success" onclick="refreshAddNewTab('@Url.Action("AddorEdit", "Album", new { id= 0 })', false)"><i class="fas fa-plus-circle"></i>Add new album </a>
                    }
                </div>
            </div>
            <!-- Where we close off col-md-6 -->
        </div>

        <div class="col-md-6">
            <div class="form-group">
                @Html.LabelFor(model => model.ImagePath, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">

                    <img src="@Url.Content(Model.ImagePath)" style="margin: 10px" height="200" width="200" id="imagePreview" />
                    <input type="file" name="ImageUpload" accept="image/jpeg, image/png" onchange="ShowImagePreview(this, document.getElementById('imagePreview'))" />
                </div>
            </div>
        </div>

    </div>
</div>
}
